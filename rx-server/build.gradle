buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath 'com.moowork.gradle:gradle-node-plugin:0.9'
    }
}

plugins {
    id 'java'
    id 'eclipse'
}

ext {
    spring_boot = "1.3.3.RELEASE"
    postgres_jdbc = "9.4.1208"
    gradleWrapperVersion = project.gradleWrapperVersion
    cacheDir = gradle.getGradleUserHomeDir() as String ?: "${System.getProperty("user.home")}/.cache/gradle"
    new File(cacheDir).mkdirs()

    commit = System.getenv("COMMIT_HASH") ?: "git rev-parse HEAD".execute().text.trim()
}

apply plugin: 'spring-boot'
apply plugin: "com.moowork.node"

repositories {
    jcenter()
}

dependencies {
    compile ("org.springframework.boot:spring-boot-starter-web:${spring_boot}") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${spring_boot}"
    compile ("org.springframework.boot:spring-boot-starter-jetty")
    compile "org.postgresql:postgresql:${postgres_jdbc}"
    
    testCompile("junit:junit") 

}

node {
    version = '4.3.2'
    npmVersion = '2.14.12'
    download = true
}

task npmCacheConfig(type: NpmTask) {
    description = "Configure the NPM cache"
    def npmCacheDir = "${cacheDir}/caches/npm"
    outputs.files file(npmCacheDir)
    args = [ 'config', 'set', 'cache', npmCacheDir ]
}

task npmPackages(type: NpmTask, dependsOn: npmCacheConfig) {
    description = "Install Node.js packages"
    args = [ 'install' ]
    inputs.files file('package.json')
    outputs.files file('node_modules')    
}

task bowerInstall(type: NodeTask) {
    script = file('node_modules/.bin/bower')
    args = ["--config.storage.cache=${cacheDir}/caches/bower/cache",
            "--config.storage.packages=${cacheDir}/caches/bower/packages",
            "--config.storage.registry=${cacheDir}/caches/bower/registry",
            'install']
    inputs.files file('bower.json')
    outputs.files file('src/main/resources/static/bower_components')
    dependsOn npmPackages
}

task bowerSyncJavascript(type: Sync) {
    from 'bower_components'
    into "src/main/resources/static/bower_components"
    dependsOn bowerInstall
}

task bowerSyncStylesheets(type: Sync) {
    from 'bower_components'
    into "grails-app/assets/stylesheets/bower_components"
    include 'angular*/**/*.css'
    include 'animate.css/animate.css'
    dependsOn bowerInstall
}

task bowerPackages() {
    dependsOn bowerSyncJavascript, bowerSyncStylesheets
}

processResources.dependsOn bowerPackages

clean.delete << file('node_modules')
clean.delete << file('bower_components')
